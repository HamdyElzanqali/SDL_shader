name: Build SDL_shader (Linux + Windows)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]

    steps:
      # 1️⃣ Checkout with submodules
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # 2️⃣ Set build directory variable
      - name: Set up CMake build directory
        id: vars
        run: echo "build_dir=${{ github.workspace }}/build" >> $GITHUB_OUTPUT

      # 3️⃣ Configure project
      - name: Configure CMake
        shell: bash
        env:
          CXXFLAGS: -Wno-reorder -Wno-attributes
        run: |
          cmake -S . -B ${{ steps.vars.outputs.build_dir }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      # 4️⃣ Build project
      - name: Build
        shell: bash
        run: |
          cmake --build ${{ steps.vars.outputs.build_dir }} --config ${{ matrix.build_type }}

      # 5️⃣ Package static library + headers
      - name: Package library and includes
        shell: bash
        run: |
          mkdir -p package/include
          mkdir -p package/lib
          cp -r include/* package/include/ || true
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp ${{ steps.vars.outputs.build_dir }}/Release/*.lib package/lib/ || true
          else
            cp ${{ steps.vars.outputs.build_dir }}/libSDL_shader*.a package/lib/ || true
          fi
          cd package
          zip -r ../libSDL_shader-${{ matrix.os }}.zip include lib
          cd ..

      # 6️⃣ Upload CLI tool
      - name: Upload CLI tool (sdlshader)
        uses: actions/upload-artifact@v4
        with:
          name: sdlshader-${{ matrix.os }}
          path: |
            ${{ steps.vars.outputs.build_dir }}/Release/sdlshader*
            ${{ steps.vars.outputs.build_dir }}/sdlshader*

      # 7️⃣ Upload library package (with include/)
      - name: Upload static library (libSDL_shader.zip)
        uses: actions/upload-artifact@v4
        with:
          name: libSDL_shader-${{ matrix.os }}
          path: libSDL_shader-${{ matrix.os }}.zip
